// Cardio.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include "iostream"
#include "math.h"
using namespace std;


int main()
{
	double t[100];
	double y[100];
	double rowdim[100]; //N1 - strings
	double coldim[100]; //N2 - colons
	double somethingImportant[100];		//incorrect name
	double tSleep[100]; //T_sna
	int n = sizeof(rowdim) - 1;
	int nInitial = 0; //N_nach
	int nFinal = n; //N_konech
	int j = 0;
	int i = 0;
	int k = 0;
	double max = 0;
	double somethingOneMore;	//incorrect name
	double a = 12.5; //hours of day
	double b = 8; //hours of night
	double gapSleepDay = a * 3600; //sleep in seconds
	double gapSleepNight = b * 3600; //sleep in seconds
	double gapSleep = gapSleepDay + gapSleepNight;


	if (sizeof(coldim)) {
		t[0] = 0;
		for (i = 0; i < nInitial + 1; i++) {
			t[0] = t[0] + rowdim[i] / 1000;
		}
		y[0] = 60 / rowdim[nInitial + 1] / 1000;
		for (i = nInitial + 1; i < nFinal; i++) {
			t[i - nInitial] = t[i - nInitial - 1] + rowdim[i + 1] / 1000;
			y[i - nInitial] = 60 / (rowdim[i + 1] / 1000);
		}
	}
	else {
		for (int i = nInitial; i < nFinal; i++) {
			t[i - nInitial] = rowdim[i + 1];
			y[i - nInitial] = coldim[i + 1];
		}
	}
	for (i = 0; i < n-1; i++) {
		somethingImportant[i] = abs((y[i + 1] - y[i]) / (t[i + 1] - t[i]));
		if (somethingImportant[i] > max) max = somethingImportant[i];
	}
	while (max >= 100) {
		for (i = 0; i < n - 1; i++) {
			somethingOneMore = abs((y[i + 1] - y[i]) / (t[i + 1] - t[i]));
			if (abs(y[i]) < 200 && somethingOneMore < 100) {
				t[j] = t[i];
				y[j] = y[i];
				j++;
			}
		}
		n = j - 1;
	}
	n = sizeof(rowdim) - 1;
	/*
	yt:=[seq([t[i],y[i]],i=0..N)]:
	t[0]:=t[0];
	t[N]:=t[N];
	*/
	for (j = 1; j < gapSleep; i++) { //nops(gapSleep) from Maple
		for (i = 0; i < n; i++) {
			if (t[i] >= gapSleepDay && t[i] <= gapSleepNight) {
				k++;
				tSleep[k] = t[i];
			}
		}
	}

    return 0;
}

